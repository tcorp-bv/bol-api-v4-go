{
  "swagger" : "2.0",
  "host": "api.bol.com",
  "schemes": ["https"], 
  "info" : {
    "description" : "The bol.com API for Retailers.",
    "version" : "4.0",
    "title" : "v4"
  },
  "tags" : [ {
    "name" : "Content"
  }, {
    "name" : "Insights"
  }, {
    "name" : "Offers"
  }, {
    "name" : "Orders"
  }, {
    "name" : "Pricing"
  }, {
    "name" : "Process Status"
  }, {
    "name" : "Returns"
  }, {
    "name" : "Shipping Labels"
  }, {
    "name" : "Subscriptions"
  }, {
    "name" : "Transports"
  } ],
  "paths" : {
    "/retailer/content/product" : {
      "post" : {
        "tags" : [ "Content" ],
        "summary" : "Post product content",
        "description" : "Create content for existing products or new products.",
        "operationId" : "post-product-content",
        "consumes" : [ "application/vnd.retailer.v4+json", "application/vnd.retailer.v4+xml" ],
        "produces" : [ "application/vnd.retailer.v4+json", "application/vnd.retailer.v4+xml" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/CreateProductContentRequest"
          }
        } ],
        "responses" : {
          "202" : {
            "description" : "Accepted: Successfully scheduled the request for processing.",
            "schema" : {
              "$ref" : "#/definitions/ProcessStatus"
            }
          },
          "400" : {
            "description" : "Bad request: The sent request does not meet the API specification. Please check the error message(s) for more information.",
            "schema" : {
              "$ref" : "#/definitions/Problem"
            }
          }
        }
      }
    },
    "/retailer/content/validation-report/{uploadId}" : {
      "get" : {
        "tags" : [ "Content" ],
        "summary" : "Get validation report",
        "description" : "Retrieve a validation report of the product content upload based on the upload id.",
        "operationId" : "get-validation-report",
        "produces" : [ "application/vnd.retailer.v4+json", "application/vnd.retailer.v4+xml" ],
        "parameters" : [ {
          "name" : "uploadId",
          "in" : "path",
          "description" : "The identifier of the product content upload.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok: Successfully processed the request.",
            "schema" : {
              "$ref" : "#/definitions/ValidationReportResponse"
            }
          },
          "404" : {
            "description" : "Not found: The requested item could not be found.",
            "schema" : {
              "$ref" : "#/definitions/Problem"
            }
          }
        }
      }
    },
    "/retailer/insights/offer" : {
      "get" : {
        "tags" : [ "Insights" ],
        "summary" : "Get offer insights",
        "description" : "Gets offer insights.",
        "operationId" : "get-offer-insights",
        "produces" : [ "application/vnd.retailer.v4+json", "application/vnd.retailer.v4+xml" ],
        "parameters" : [ {
          "name" : "offer-id",
          "in" : "query",
          "description" : "Unique identifier for an offer.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "period",
          "in" : "query",
          "description" : "The time unit in which the offer insights are grouped.",
          "required" : true,
          "type" : "string",
          "enum" : [ "DAY", "WEEK", "MONTH" ]
        }, {
          "name" : "number-of-periods",
          "in" : "query",
          "description" : "The number of periods for which the offer insights are requested back in time.",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "name",
          "in" : "query",
          "description" : "The name of the requested offer insight.",
          "required" : true,
          "type" : "array",
          "items" : {
            "type" : "string",
            "enum" : [ "PRODUCT_VISITS", "BUY_BOX_PERCENTAGE" ]
          },
          "collectionFormat" : "multi"
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok: Successfully processed the request.",
            "schema" : {
              "$ref" : "#/definitions/OfferInsights"
            }
          },
          "400" : {
            "description" : "Bad request: The sent request does not meet the API specification. Please check the error message(s) for more information.",
            "schema" : {
              "$ref" : "#/definitions/Problem"
            }
          }
        }
      }
    },
    "/retailer/insights/sales-forecast" : {
      "get" : {
        "tags" : [ "Insights" ],
        "summary" : "Get sales forecast",
        "description" : "Gets sales forecast.",
        "operationId" : "get-sales-forecast",
        "produces" : [ "application/vnd.retailer.v4+json", "application/vnd.retailer.v4+xml" ],
        "parameters" : [ {
          "name" : "offer-id",
          "in" : "query",
          "description" : "Unique identifier for an offer.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "weeks-ahead",
          "in" : "query",
          "description" : "The number of weeks into the future, starting from today.",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok: Successfully processed the request.",
            "schema" : {
              "$ref" : "#/definitions/SalesForecastResponse"
            }
          },
          "400" : {
            "description" : "Bad request: The sent request does not meet the API specification. Please check the error message(s) for more information.",
            "schema" : {
              "$ref" : "#/definitions/Problem"
            }
          }
        }
      }
    },
    "/retailer/offers/unpublished" : {
      "post" : {
        "tags" : [ "Offers" ],
        "summary" : "Request an unpublished offer report",
        "description" : "Request an unpublished offer report containing all unpublished offers and reasons.",
        "operationId" : "post-unpublished-offer-report",
        "consumes" : [ "application/vnd.retailer.v4+json", "application/vnd.retailer.v4+xml" ],
        "produces" : [ "application/vnd.retailer.v4+json", "application/vnd.retailer.v4+xml" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/CreateUnpublishedOfferReportRequest"
          }
        } ],
        "responses" : {
          "202" : {
            "description" : "Accepted: Successfully scheduled the request for processing.",
            "schema" : {
              "$ref" : "#/definitions/ProcessStatus"
            }
          },
          "400" : {
            "description" : "Bad request: The sent request does not meet the API specification. Please check the error message(s) for more information.",
            "schema" : {
              "$ref" : "#/definitions/Problem"
            }
          }
        }
      }
    },
    "/retailer/offers/unpublished/{report-id}" : {
      "get" : {
        "tags" : [ "Offers" ],
        "summary" : "Retrieve an unpublished offer report by report id",
        "description" : "Retrieve an unpublished offer report containing all unpublished offers and reasons.",
        "operationId" : "get-unpublished-offer-report",
        "produces" : [ "application/vnd.retailer.v4+csv" ],
        "parameters" : [ {
          "name" : "report-id",
          "in" : "path",
          "description" : "Unique identifier for unpublished offer report.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok: Successfully processed the request."
          },
          "400" : {
            "description" : "Bad request: The sent request does not meet the API specification. Please check the error message(s) for more information.",
            "schema" : {
              "$ref" : "#/definitions/Problem"
            }
          },
          "404" : {
            "description" : "Not found: The requested item could not be found.",
            "schema" : {
              "$ref" : "#/definitions/Problem"
            }
          }
        }
      }
    },
    "/retailer/orders/cancellation" : {
      "put" : {
        "tags" : [ "Orders" ],
        "summary" : "Cancel an order item by an order item id",
        "description" : "This endpoint can be used to either confirm a cancellation request by the customer or to cancel an order item you yourself are unable to fulfil.",
        "operationId" : "cancel-order-item",
        "consumes" : [ "application/vnd.retailer.v4+json", "application/vnd.retailer.v4+xml" ],
        "produces" : [ "application/vnd.retailer.v4+json", "application/vnd.retailer.v4+xml" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Container for the order items that have to be cancelled."
          }
        } ],
        "responses" : {
          "202" : {
            "description" : "Accepted: Successfully scheduled the request for processing.",
            "schema" : {
              "$ref" : "#/definitions/ProcessStatus"
            }
          },
          "400" : {
            "description" : "Bad request: The sent request does not meet the API specification. Please check the error message(s) for more information.",
            "schema" : {
              "$ref" : "#/definitions/Problem"
            }
          }
        }
      }
    },
    "/retailer/orders/shipment" : {
      "put" : {
        "tags" : [ "Orders" ],
        "summary" : "Ship order item",
        "description" : "Ship a single order item within a customer order by providing shipping information. In case you purchased a shipping label you can add the shippingLabelId to this message; in that case the transport element must be left empty. If you ship the item(s) using your own transporter method you must omit the shippingLabelId entirely.",
        "operationId" : "ship-order-item",
        "consumes" : [ "application/vnd.retailer.v4+json", "application/vnd.retailer.v4+xml" ],
        "produces" : [ "application/vnd.retailer.v4+json", "application/vnd.retailer.v4+xml" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/ShipmentRequest"
          }
        } ],
        "responses" : {
          "202" : {
            "description" : "Accepted: Successfully scheduled the request for processing.",
            "schema" : {
              "$ref" : "#/definitions/ProcessStatus"
            }
          },
          "400" : {
            "description" : "Bad request: The sent request does not meet the API specification. Please check the error message(s) for more information.",
            "schema" : {
              "$ref" : "#/definitions/Problem"
            }
          }
        }
      }
    },
    "/retailer/pricing/retail-prices/{ean}" : {
      "get" : {
        "tags" : [ "Pricing" ],
        "summary" : "Retrieve retail price information for an EAN.",
        "description" : "Currently this endpoint only supports the allowable retail price and can support the following use cases:<br /><br />\n                    1) EANs that have been unpublished due to price related reasons can be checked against this endpoint.<br />\n                    2) Requesting the allowable retail price for EANs that are not yet in your assortment can help inform price setting.",
        "operationId" : "get-retail-price",
        "produces" : [ "application/vnd.retailer.v4+json", "application/vnd.retailer.v4+xml" ],
        "parameters" : [ {
          "name" : "ean",
          "in" : "path",
          "description" : "The EAN number associated with this product.",
          "required" : true,
          "type" : "string",
          "x-example" : "0000007740404"
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok: Successfully processed the request.",
            "schema" : {
              "$ref" : "#/definitions/RetailPriceResponse"
            }
          },
          "400" : {
            "description" : "Bad request: The sent request does not meet the API specification. Please check the error message(s) for more information.",
            "schema" : {
              "$ref" : "#/definitions/Problem"
            }
          },
          "404" : {
            "description" : "Not found: The requested item could not be found.",
            "schema" : {
              "$ref" : "#/definitions/Problem"
            }
          }
        }
      }
    },
    "/retailer/process-status" : {
      "get" : {
        "tags" : [ "Process Status" ],
        "summary" : "Gets the status of an asynchronous process by entity id and event type for a retailer",
        "description" : "Retrieve a list of process statuses, which shows information regarding previously executed PUT/POST/DELETE requests in descending order. You need to supply an entity id and event type. Please note: process status instances are only retained for a limited period of time after completion. Outside of this period, deleted process statuses will no longer be returned. Please handle this accordingly, by stopping any active polling for these statuses.",
        "operationId" : "get-process-status-entity-id",
        "produces" : [ "application/vnd.retailer.v4+json", "application/vnd.retailer.v4+xml" ],
        "parameters" : [ {
          "name" : "entity-id",
          "in" : "query",
          "description" : "The entity id is not unique so you need to provide an event type. The entity id can either be order item id, transport id, return number or inbound reference.",
          "required" : true,
          "type" : "string",
          "x-example" : "987654321"
        }, {
          "name" : "event-type",
          "in" : "query",
          "description" : "The event type can only be used in combination with the entity id.",
          "required" : true,
          "type" : "string",
          "x-example" : "PROCESS_EXAMPLE",
          "enum" : [ "CONFIRM_SHIPMENT", "CANCEL_ORDER", "CHANGE_TRANSPORT", "HANDLE_RETURN_ITEM", "CREATE_RETURN_ITEM", "CREATE_INBOUND", "DELETE_OFFER", "CREATE_OFFER", "UPDATE_OFFER", "UPDATE_OFFER_STOCK", "UPDATE_OFFER_PRICE", "CREATE_OFFER_EXPORT", "UNPUBLISHED_OFFER_REPORT", "CREATE_PRODUCT_CONTENT" ]
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "The requested page number with a pagesize of 50",
          "required" : false,
          "type" : "integer",
          "default" : 1,
          "minimum" : 1,
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok: Successfully processed the request.",
            "schema" : {
              "$ref" : "#/definitions/ProcessStatusResponse"
            }
          },
          "400" : {
            "description" : "Bad request: The sent request does not meet the API specification. Please check the error message(s) for more information.",
            "schema" : {
              "$ref" : "#/definitions/Problem"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Process Status" ],
        "summary" : "Gets the status of multiple asynchronous processes by an array of process status id's for a retailer",
        "description" : "Retrieve a list of process statuses, which shows information regarding previously executed PUT/POST/DELETE requests. No more than 1000 process status id's can be sent in a single request.Please note: process status instances are only retained for a limited period of time after completion. Outside of this period, deleted process statuses will no longer be returned. Please handle this accordingly, by stopping any active polling for these statuses.",
        "operationId" : "get-process-status-bulk",
        "consumes" : [ "application/vnd.retailer.v4+json", "application/vnd.retailer.v4+xml" ],
        "produces" : [ "application/vnd.retailer.v4+json", "application/vnd.retailer.v4+xml" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/BulkProcessStatusRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok: Successfully processed the request.",
            "schema" : {
              "$ref" : "#/definitions/ProcessStatusResponse"
            }
          },
          "400" : {
            "description" : "Bad request: The sent request does not meet the API specification. Please check the error message(s) for more information.",
            "schema" : {
              "$ref" : "#/definitions/Problem"
            }
          }
        }
      }
    },
    "/retailer/process-status/{process-status-id}" : {
      "get" : {
        "tags" : [ "Process Status" ],
        "summary" : "Get the status of an asynchronous process by id",
        "description" : "Retrieve a specific process-status, which shows information regarding a previously executed PUT/POST/DELETE request. All PUT/POST/DELETE requests on the other endpoints will supply a process-status-id in the related response. You can use this id to retrieve a status by using the endpoint below. Please note: process status instances are only retained for a limited period of time after completion. Outside of this period, a 404 will be returned for missing process statuses. Please handle this accordingly, by stopping any active polling for these statuses.",
        "operationId" : "get-process-status",
        "produces" : [ "application/vnd.retailer.v4+json", "application/vnd.retailer.v4+xml" ],
        "parameters" : [ {
          "name" : "process-status-id",
          "in" : "path",
          "description" : "The id of the process status being requested. This id is supplied in every response to a PUT/POST/DELETE request on the other endpoints.",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok: Successfully processed the request.",
            "schema" : {
              "$ref" : "#/definitions/ProcessStatus"
            }
          },
          "404" : {
            "description" : "Not found: The requested item could not be found.",
            "schema" : {
              "$ref" : "#/definitions/Problem"
            }
          }
        }
      }
    },
    "/retailer/returns" : {
      "get" : {
        "tags" : [ "Returns" ],
        "summary" : "Get returns",
        "description" : "Get a paginated list of multi-item returns, which are sorted by date in descending order.",
        "operationId" : "get-returns",
        "produces" : [ "application/vnd.retailer.v4+json", "application/vnd.retailer.v4+xml" ],
        "parameters" : [ {
          "name" : "page",
          "in" : "query",
          "description" : "The page to get with a page size of 50.",
          "required" : false,
          "type" : "integer",
          "default" : 1,
          "minimum" : 1,
          "format" : "int32"
        }, {
          "name" : "handled",
          "in" : "query",
          "description" : "The status of the returns you wish to see, shows either handled or unhandled returns.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "fulfilment-method",
          "in" : "query",
          "description" : "The fulfilment method. Fulfilled by the retailer (FBR) or fulfilled by bol.com (FBB).",
          "required" : false,
          "type" : "string",
          "default" : "FBR",
          "enum" : [ "FBR", "FBB" ]
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok: Successfully processed the request.",
            "schema" : {
              "$ref" : "#/definitions/ReturnsResponse"
            }
          },
          "400" : {
            "description" : "Bad request: The sent request does not meet the API specification. Please check the error message(s) for more information.",
            "schema" : {
              "$ref" : "#/definitions/Problem"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Returns" ],
        "summary" : "Create return",
        "description" : "Create a return, and automatically handle it with the provided handling result. When successfully created, the resulting return id is provided in the process status.",
        "operationId" : "create-return",
        "produces" : [ "application/vnd.retailer.v4+json", "application/vnd.retailer.v4+xml" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/CreateReturnRequest"
          }
        } ],
        "responses" : {
          "202" : {
            "description" : "Accepted: Successfully scheduled the request for processing.",
            "schema" : {
              "$ref" : "#/definitions/ProcessStatus"
            }
          },
          "400" : {
            "description" : "Bad request: The sent request does not meet the API specification. Please check the error message(s) for more information.",
            "schema" : {
              "$ref" : "#/definitions/Problem"
            }
          }
        }
      }
    },
    "/retailer/returns/{return-id}" : {
      "get" : {
        "tags" : [ "Returns" ],
        "summary" : "Get a return by return id",
        "description" : "Retrieve a return based on the return id.",
        "operationId" : "get-return",
        "produces" : [ "application/vnd.retailer.v4+json", "application/vnd.retailer.v4+xml" ],
        "parameters" : [ {
          "name" : "return-id",
          "in" : "path",
          "description" : "The return id that identifies this return.",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok: Successfully processed the request.",
            "schema" : {
              "$ref" : "#/definitions/Return"
            }
          },
          "404" : {
            "description" : "Not found: The requested item could not be found.",
            "schema" : {
              "$ref" : "#/definitions/Problem"
            }
          }
        }
      }
    },
    "/retailer/returns/{rma-id}" : {
      "put" : {
        "tags" : [ "Returns" ],
        "summary" : "Handle a return",
        "description" : "Allows the user to handle a return. This can be to either handle an open return, or change the handlingResult of an already handled return. The latter is only possible in limited scenarios, please check the returns documentation for a complete list.",
        "operationId" : "handle-return",
        "consumes" : [ "application/vnd.retailer.v4+json", "application/vnd.retailer.v4+xml" ],
        "produces" : [ "application/vnd.retailer.v4+json", "application/vnd.retailer.v4+xml" ],
        "parameters" : [ {
          "name" : "rma-id",
          "in" : "path",
          "description" : "The RMA (Return Merchandise Authorization) id that identifies this particular return.",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "The handling result requested by the retailer.",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/ReturnRequest"
          }
        } ],
        "responses" : {
          "202" : {
            "description" : "Accepted: Successfully scheduled the request for processing.",
            "schema" : {
              "$ref" : "#/definitions/ProcessStatus"
            }
          },
          "400" : {
            "description" : "Bad request: The sent request does not meet the API specification. Please check the error message(s) for more information.",
            "schema" : {
              "$ref" : "#/definitions/Problem"
            }
          }
        }
      }
    },
    "/retailer/shipping-labels" : {
      "post" : {
        "tags" : [ "Shipping Labels" ],
        "summary" : "Create a shipping label",
        "description" : "Create a shipping label with a shipping label offer id retrieved from get delivery options.",
        "operationId" : "post-shipping-label",
        "consumes" : [ "application/vnd.retailer.v4+json", "application/vnd.retailer.v4+xml" ],
        "produces" : [ "application/vnd.retailer.v4+json", "application/vnd.retailer.v4+xml" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/ShippingLabelRequest"
          }
        } ],
        "responses" : {
          "202" : {
            "description" : "Accepted: Successfully scheduled the request for processing.",
            "schema" : {
              "$ref" : "#/definitions/ProcessStatus"
            }
          },
          "400" : {
            "description" : "Bad request: The sent request does not meet the API specification. Please check the error message(s) for more information.",
            "schema" : {
              "$ref" : "#/definitions/Problem"
            }
          }
        }
      }
    },
    "/retailer/shipping-labels/delivery-options" : {
      "post" : {
        "tags" : [ "Shipping Labels" ],
        "summary" : "Get delivery options for a shippable configuration of a number of order items within an order.",
        "description" : "Retrieves all available delivery options based on the supplied configuration of order items that has to be shipped.",
        "operationId" : "get-delivery-options",
        "consumes" : [ "application/vnd.retailer.v4+json", "application/vnd.retailer.v4+xml" ],
        "produces" : [ "application/vnd.retailer.v4+json", "application/vnd.retailer.v4+xml" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/DeliveryOptionsRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok: Successfully processed the request.",
            "schema" : {
              "$ref" : "#/definitions/DeliveryOptionsResponse"
            }
          },
          "400" : {
            "description" : "Bad request: The sent request does not meet the API specification. Please check the error message(s) for more information.",
            "schema" : {
              "$ref" : "#/definitions/Problem"
            }
          },
          "404" : {
            "description" : "Not found: The requested item could not be found.",
            "schema" : {
              "$ref" : "#/definitions/Problem"
            }
          }
        }
      }
    },
    "/retailer/shipping-labels/{shipping-label-id}" : {
      "get" : {
        "tags" : [ "Shipping Labels" ],
        "summary" : "Get a shipping label",
        "description" : "Gets a shipping label by shipping label id.",
        "operationId" : "get-shipping-label",
        "produces" : [ "application/vnd.retailer.v4+pdf" ],
        "parameters" : [ {
          "name" : "shipping-label-id",
          "in" : "path",
          "description" : "The shipping label id.",
          "required" : true,
          "type" : "string",
          "x-example" : "6ff736b5-cdd0-4150-8c67-78269ee986f5"
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok: Successfully processed the request.",
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "string",
                "format" : "byte"
              }
            }
          },
          "400" : {
            "description" : "Bad request: The sent request does not meet the API specification. Please check the error message(s) for more information.",
            "schema" : {
              "$ref" : "#/definitions/Problem"
            }
          },
          "404" : {
            "description" : "Not found: The requested item could not be found.",
            "schema" : {
              "$ref" : "#/definitions/Problem"
            }
          }
        }
      }
    },
    "/retailer/subscriptions" : {
      "get" : {
        "tags" : [ "Subscriptions" ],
        "summary" : "Get push notification subscriptions",
        "description" : "Retrieve a list of all configured and active push notification subscriptions.",
        "operationId" : "get-push-notification-subscriptions",
        "produces" : [ "application/vnd.retailer.v4+json", "application/vnd.retailer.v4+xml" ],
        "responses" : {
          "200" : {
            "description" : "Ok: Successfully processed the request.",
            "schema" : {
              "$ref" : "#/definitions/SubscriptionsResponse"
            }
          },
          "400" : {
            "description" : "Bad request: The sent request does not meet the API specification. Please check the error message(s) for more information.",
            "schema" : {
              "$ref" : "#/definitions/Problem"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Subscriptions" ],
        "summary" : "Create push notification subscription",
        "description" : "Create a push notification subscription for one (or more) of the available resources. The configured URL has to support https scheme.",
        "operationId" : "post-push-notification-subscription",
        "consumes" : [ "application/vnd.retailer.v4+json", "application/vnd.retailer.v4+xml" ],
        "produces" : [ "application/vnd.retailer.v4+json", "application/vnd.retailer.v4+xml" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/CreateSubscriptionRequest"
          }
        } ],
        "responses" : {
          "202" : {
            "description" : "Accepted: Successfully scheduled the request for processing.",
            "schema" : {
              "$ref" : "#/definitions/ProcessStatus"
            }
          },
          "400" : {
            "description" : "Bad request: The sent request does not meet the API specification. Please check the error message(s) for more information.",
            "schema" : {
              "$ref" : "#/definitions/Problem"
            }
          }
        }
      }
    },
    "/retailer/subscriptions/test" : {
      "post" : {
        "tags" : [ "Subscriptions" ],
        "summary" : "Send test push notification for subscriptions",
        "description" : "Send a test push notification to all subscriptions for the provided event.",
        "operationId" : "post-test-push-notification",
        "consumes" : [ "application/vnd.retailer.v4+json", "application/vnd.retailer.v4+xml" ],
        "produces" : [ "application/vnd.retailer.v4+json", "application/vnd.retailer.v4+xml" ],
        "responses" : {
          "202" : {
            "description" : "Accepted: Successfully scheduled the request for processing.",
            "schema" : {
              "$ref" : "#/definitions/ProcessStatus"
            }
          },
          "400" : {
            "description" : "Bad request: The sent request does not meet the API specification. Please check the error message(s) for more information.",
            "schema" : {
              "$ref" : "#/definitions/Problem"
            }
          }
        }
      }
    },
    "/retailer/subscriptions/{subscription-id}" : {
      "get" : {
        "tags" : [ "Subscriptions" ],
        "summary" : "Get push notification subscription by id",
        "description" : "Retrieve a configured and active push notification subscription with the provided id.",
        "operationId" : "get-push-notification-subscription",
        "produces" : [ "application/vnd.retailer.v4+json", "application/vnd.retailer.v4+xml" ],
        "parameters" : [ {
          "name" : "subscription-id",
          "in" : "path",
          "description" : "A unique identifier for the subscription",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "x-example" : 1234
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok: Successfully processed the request.",
            "schema" : {
              "$ref" : "#/definitions/SubscriptionResponse"
            }
          },
          "400" : {
            "description" : "Bad request: The sent request does not meet the API specification. Please check the error message(s) for more information.",
            "schema" : {
              "$ref" : "#/definitions/Problem"
            }
          },
          "404" : {
            "description" : "Not found: The requested item could not be found.",
            "schema" : {
              "$ref" : "#/definitions/Problem"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Subscriptions" ],
        "summary" : "Update push notification subscription",
        "description" : "Update an existing push notification subscription with the supplied id. The configured URL has to support https scheme.",
        "operationId" : "put-push-notification-subscription",
        "consumes" : [ "application/vnd.retailer.v4+json", "application/vnd.retailer.v4+xml" ],
        "produces" : [ "application/vnd.retailer.v4+json", "application/vnd.retailer.v4+xml" ],
        "parameters" : [ {
          "name" : "subscription-id",
          "in" : "path",
          "description" : "A unique identifier for the subscription",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "x-example" : 1234
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/UpdateSubscriptionRequest"
          }
        } ],
        "responses" : {
          "202" : {
            "description" : "Accepted: Successfully scheduled the request for processing.",
            "schema" : {
              "$ref" : "#/definitions/ProcessStatus"
            }
          },
          "400" : {
            "description" : "Bad request: The sent request does not meet the API specification. Please check the error message(s) for more information.",
            "schema" : {
              "$ref" : "#/definitions/Problem"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Subscriptions" ],
        "summary" : "Delete push notification subscription",
        "description" : "Delete a push notification subscription with the provided id.",
        "operationId" : "delete-push-notification-subscription",
        "consumes" : [ "application/vnd.retailer.v4+json", "application/vnd.retailer.v4+xml" ],
        "produces" : [ "application/vnd.retailer.v4+json", "application/vnd.retailer.v4+xml" ],
        "parameters" : [ {
          "name" : "subscription-id",
          "in" : "path",
          "description" : "A unique identifier for the subscription",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "x-example" : 1234
        } ],
        "responses" : {
          "202" : {
            "description" : "Accepted: Successfully scheduled the request for processing.",
            "schema" : {
              "$ref" : "#/definitions/ProcessStatus"
            }
          },
          "400" : {
            "description" : "Bad request: The sent request does not meet the API specification. Please check the error message(s) for more information.",
            "schema" : {
              "$ref" : "#/definitions/Problem"
            }
          }
        }
      }
    },
    "/retailer/transports/{transport-id}" : {
      "put" : {
        "tags" : [ "Transports" ],
        "summary" : "Add transport information by transport id",
        "description" : "Add information to an existing transport. The transport id is part of the shipment. You can retrieve the transport id through the GET shipment list request.",
        "operationId" : "add-transport-information-by-transport-id",
        "consumes" : [ "application/vnd.retailer.v4+json", "application/vnd.retailer.v4+xml" ],
        "produces" : [ "application/vnd.retailer.v4+json", "application/vnd.retailer.v4+xml" ],
        "parameters" : [ {
          "name" : "transport-id",
          "in" : "path",
          "description" : "The transport id.",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "The change transport requested by the user.",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/ChangeTransportRequest"
          }
        } ],
        "responses" : {
          "202" : {
            "description" : "Accepted: Successfully scheduled the request for processing.",
            "schema" : {
              "$ref" : "#/definitions/ProcessStatus"
            }
          },
          "400" : {
            "description" : "Bad request: The sent request does not meet the API specification. Please check the error message(s) for more information.",
            "schema" : {
              "$ref" : "#/definitions/Problem"
            }
          }
        }
      }
    }
  },
  "definitions" : {
    "Attribute" : {
      "type" : "object",
      "required" : [ "id", "values" ],
      "properties" : {
        "id" : {
          "type" : "string",
          "example" : "Width",
          "description" : "Identifier of the attribute from the data model.",
          "minLength" : 1,
          "maxLength" : 100
        },
        "values" : {
          "type" : "array",
          "description" : "A list of attribute values.",
          "items" : {
            "$ref" : "#/definitions/AttributeValue"
          }
        }
      }
    },
    "AttributeValue" : {
      "type" : "object",
      "required" : [ "value" ],
      "properties" : {
        "value" : {
          "type" : "string",
          "example" : "14.5",
          "description" : "The value(s) of the attribute.",
          "minLength" : 1,
          "maxLength" : 10000
        },
        "unitId" : {
          "type" : "string",
          "example" : "mm",
          "description" : "The unit identifier of the attribute."
        }
      }
    },
    "BulkProcessStatusRequest" : {
      "type" : "object",
      "required" : [ "processStatusQueries" ],
      "properties" : {
        "processStatusQueries" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ProcessStatusId"
          },
          "maxItems" : 1000,
          "minItems" : 1
        }
      }
    },
    "ChangeTransportRequest" : {
      "type" : "object",
      "properties" : {
        "transporterCode" : {
          "type" : "string",
          "example" : "TNT",
          "enum" : [ "BRIEFPOST", "UPS", "TNT", "TNT-EXTRA", "TNT_BRIEF", "TNT-EXPRESS", "DYL", "DPD-NL", "DPD-BE", "BPOST_BE", "BPOST_BRIEF", "DHLFORYOU", "GLS", "FEDEX_NL", "FEDEX_BE", "OTHER", "DHL", "DHL_DE", "DHL-GLOBAL-MAIL", "TSN", "FIEGE", "TRANSMISSION", "PARCEL-NL", "LOGOIX", "PACKS", "COURIER", "RJP" ]
        },
        "trackAndTrace" : {
          "type" : "string",
          "example" : "3SBOL0987654321",
          "description" : "The track and trace code that is associated with this transport."
        }
      }
    },
    "Container for the order items that have to be cancelled." : {
      "type" : "object",
      "required" : [ "orderItems" ],
      "properties" : {
        "orderItems" : {
          "type" : "array",
          "description" : "List of order items to cancel. Order item id's must belong to the same order.",
          "items" : {
            "$ref" : "#/definitions/OrderItemCancellation"
          },
          "maxItems" : 1,
          "minItems" : 1
        }
      }
    },
    "Country" : {
      "type" : "object",
      "properties" : {
        "countryCode" : {
          "type" : "string",
          "example" : "NL",
          "description" : "The country code."
        },
        "value" : {
          "type" : "number",
          "format" : "double",
          "example" : 100.0,
          "description" : "The total value of offer insight."
        }
      }
    },
    "CountryTotalResponse" : {
      "type" : "object",
      "properties" : {
        "countryCode" : {
          "type" : "string",
          "example" : "NL",
          "description" : "The country code."
        },
        "minimum" : {
          "type" : "number",
          "format" : "double",
          "example" : 10.5,
          "description" : "Minimum number of estimated sales expectations on the bol.com platform."
        },
        "maximum" : {
          "type" : "number",
          "format" : "double",
          "example" : 20.5,
          "description" : "Maximum number of estimated sales expectations on the bol.com platform."
        }
      }
    },
    "CreateProductContentRequest" : {
      "type" : "object",
      "required" : [ "language", "productContents" ],
      "properties" : {
        "language" : {
          "type" : "string",
          "example" : "nl",
          "description" : "The language to indicate the language of the supplied content.",
          "enum" : [ "nl", "nl-BE", "fr", "fr-BE" ]
        },
        "productContents" : {
          "type" : "array",
          "description" : "A list of supplied products and their attributes. Attributes that are required for publishing products online will be mentioned in the data model.",
          "items" : {
            "$ref" : "#/definitions/ProductContent"
          },
          "maxItems" : 100,
          "minItems" : 1
        }
      }
    },
    "CreateReturnRequest" : {
      "type" : "object",
      "required" : [ "handlingResult", "orderItemId", "quantityReturned" ],
      "properties" : {
        "orderItemId" : {
          "type" : "string",
          "example" : "2012345678",
          "description" : "The id for the order item (1 order can have multiple order items)."
        },
        "quantityReturned" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 1,
          "description" : "The quantity of items returned.",
          "minimum" : 1,
          "maximum" : 9999
        },
        "handlingResult" : {
          "type" : "string",
          "example" : "RETURN_RECEIVED",
          "description" : "The handling result requested by the user.",
          "enum" : [ "RETURN_RECEIVED", "EXCHANGE_PRODUCT", "RETURN_DOES_NOT_MEET_CONDITIONS", "REPAIR_PRODUCT", "CUSTOMER_KEEPS_PRODUCT_PAID" ]
        }
      }
    },
    "CreateSubscriptionRequest" : {
      "type" : "object",
      "required" : [ "resources", "url" ],
      "properties" : {
        "resources" : {
          "type" : "array",
          "example" : "['PROCESS_STATUS']",
          "description" : "Type of event",
          "items" : {
            "type" : "string",
            "enum" : [ "PROCESS_STATUS" ]
          }
        },
        "url" : {
          "type" : "string",
          "example" : "https://www.bol.com/webhook",
          "description" : "URL to receive this WebHook notification",
          "pattern" : "^https.*"
        }
      }
    },
    "CreateUnpublishedOfferReportRequest" : {
      "type" : "object",
      "required" : [ "format" ],
      "properties" : {
        "format" : {
          "type" : "string",
          "example" : "CSV",
          "description" : "The file format in which to return the export.",
          "enum" : [ "CSV" ]
        }
      }
    },
    "CustomerDetails" : {
      "type" : "object",
      "properties" : {
        "salutationCode" : {
          "type" : "string",
          "example" : "02",
          "description" : "The salutation code."
        },
        "firstName" : {
          "type" : "string",
          "example" : "Billie",
          "description" : "The first name."
        },
        "surname" : {
          "type" : "string",
          "example" : "Jansen",
          "description" : "The surname."
        },
        "streetName" : {
          "type" : "string",
          "example" : "Dorpstraat",
          "description" : "The street name."
        },
        "houseNumber" : {
          "type" : "string",
          "example" : "1",
          "description" : "The house number."
        },
        "houseNumberExtended" : {
          "type" : "string",
          "example" : "B",
          "description" : "The extension on the house number."
        },
        "addressSupplement" : {
          "type" : "string",
          "example" : "Afdeling kwaliteit",
          "description" : "The address supplement."
        },
        "extraAddressInformation" : {
          "type" : "string",
          "example" : "Apartment",
          "description" : "Extra information about the address."
        },
        "zipCode" : {
          "type" : "string",
          "example" : "1111 ZZ",
          "description" : "The ZIP code."
        },
        "city" : {
          "type" : "string",
          "example" : "Utrecht",
          "description" : "The name of the city."
        },
        "countryCode" : {
          "type" : "string",
          "example" : "NL",
          "description" : "The country code."
        },
        "email" : {
          "type" : "string",
          "example" : "billie@verkopen.bol.com",
          "description" : "The e-mail address."
        },
        "deliveryPhoneNumber" : {
          "type" : "string",
          "example" : "012123456",
          "description" : "The delivery phone number."
        },
        "company" : {
          "type" : "string",
          "example" : "bol.com",
          "description" : "The company name."
        },
        "vatNumber" : {
          "type" : "string",
          "example" : "NL999999999B99",
          "description" : "The VAT number."
        }
      }
    },
    "DeliveryOption" : {
      "type" : "object",
      "required" : [ "labelPrice", "packageRestrictions" ],
      "properties" : {
        "shippingLabelOfferId" : {
          "type" : "string",
          "example" : "027b79fa-5743-40f0-94c7-0eac761af611",
          "description" : "Unique identifier for the shipping label offer."
        },
        "transporterCode" : {
          "type" : "string",
          "example" : "TNT_BRIEF",
          "description" : "A code representing the transporter which is being used for transportation."
        },
        "labelType" : {
          "type" : "string",
          "example" : "MAILBOX_LIGHT",
          "description" : "The type of the label, representing the way an item is being transported.",
          "enum" : [ "PARCEL", "MAILBOX", "MAILBOX_LIGHT" ]
        },
        "labelPrice" : {
          "$ref" : "#/definitions/LabelPrice"
        },
        "packageRestrictions" : {
          "$ref" : "#/definitions/PackageRestrictions"
        }
      },
      "description" : "A delivery option shows how and the costs of a transport for a shippable configuration"
    },
    "DeliveryOptionsRequest" : {
      "type" : "object",
      "required" : [ "orderItems" ],
      "properties" : {
        "orderItems" : {
          "type" : "array",
          "description" : "Order items for which the delivery options are requested.",
          "items" : {
            "$ref" : "#/definitions/OrderItem"
          }
        }
      },
      "description" : "The configuration of order items to get delivery options for."
    },
    "DeliveryOptionsResponse" : {
      "type" : "object",
      "required" : [ "deliveryOptions" ],
      "properties" : {
        "deliveryOptions" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/DeliveryOption"
          }
        }
      },
      "description" : "The possible delivery options based on a shippable configuration"
    },
    "LabelPrice" : {
      "type" : "object",
      "properties" : {
        "totalPrice" : {
          "type" : "number",
          "example" : 2.88,
          "description" : "The price that is charged for this delivery option, excluding VAT."
        }
      }
    },
    "Link" : {
      "type" : "object",
      "properties" : {
        "rel" : {
          "type" : "string",
          "example" : "self"
        },
        "href" : {
          "type" : "string",
          "example" : "https://api.bol.com/retailer/process-status/1234567"
        },
        "method" : {
          "type" : "string",
          "example" : "GET",
          "description" : "HTTP method"
        }
      }
    },
    "OfferInsight" : {
      "type" : "object",
      "required" : [ "countries", "periods" ],
      "properties" : {
        "name" : {
          "type" : "string",
          "example" : "BUY_BOX_PERCENTAGE",
          "description" : "The name of the requested offer insight."
        },
        "type" : {
          "type" : "string",
          "example" : "percentage",
          "description" : "Interpretation of the data that applies to this measurement."
        },
        "total" : {
          "type" : "number",
          "format" : "double",
          "example" : 50.0,
          "description" : "Total number of customer visits on the product page when the offer had the buy box over the requested period (excluding the current day)."
        },
        "countries" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Country"
          }
        },
        "periods" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Periods"
          }
        }
      }
    },
    "OfferInsights" : {
      "type" : "object",
      "required" : [ "offerInsights" ],
      "properties" : {
        "offerInsights" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OfferInsight"
          }
        }
      },
      "description" : "Offer insights."
    },
    "OrderItem" : {
      "type" : "object",
      "required" : [ "orderItemId" ],
      "properties" : {
        "orderItemId" : {
          "type" : "string",
          "example" : "2012345678",
          "description" : "The id for the order item (1 order can have multiple order items)."
        }
      }
    },
    "OrderItemCancellation" : {
      "type" : "object",
      "required" : [ "orderItemId", "reasonCode" ],
      "properties" : {
        "orderItemId" : {
          "type" : "string",
          "example" : "2012345678",
          "description" : "The id for the order item (1 order can have multiple order items)."
        },
        "reasonCode" : {
          "type" : "string",
          "example" : "BAD_CONDITION",
          "description" : "The code representing the reason for cancellation of this item.",
          "enum" : [ "OUT_OF_STOCK", "REQUESTED_BY_CUSTOMER", "BAD_CONDITION", "HIGHER_SHIPCOST", "INCORRECT_PRICE", "NOT_AVAIL_IN_TIME", "NO_BOL_GUARANTEE", "ORDERED_TWICE", "RETAIN_ITEM", "TECH_ISSUE", "UNFINDABLE_ITEM", "OTHER" ]
        }
      }
    },
    "PackageRestrictions" : {
      "type" : "object",
      "properties" : {
        "maxWeight" : {
          "type" : "string",
          "example" : "10 kg",
          "description" : "The weight of a package."
        },
        "maxDimensions" : {
          "type" : "string",
          "example" : "10 x 10 x 10 cm",
          "description" : "The dimensions of a package."
        }
      }
    },
    "Period" : {
      "type" : "object",
      "properties" : {
        "day" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 1,
          "description" : "Day of the month."
        },
        "week" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 49,
          "description" : "Week of the year."
        },
        "month" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 12,
          "description" : "Month of the year."
        },
        "year" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 2019,
          "description" : "Year"
        }
      }
    },
    "PeriodResponse" : {
      "type" : "object",
      "required" : [ "countries", "total" ],
      "properties" : {
        "weeksAhead" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 2,
          "description" : "The number of weeks into the future, starting from today."
        },
        "total" : {
          "$ref" : "#/definitions/TotalResponse"
        },
        "countries" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/CountryTotalResponse"
          }
        }
      }
    },
    "Periods" : {
      "type" : "object",
      "required" : [ "period" ],
      "properties" : {
        "period" : {
          "$ref" : "#/definitions/Period"
        },
        "total" : {
          "type" : "number",
          "format" : "double",
          "example" : 50.0,
          "description" : "Total number of customer visits on the product page when the offer had the buy box over the requested period (excluding the current day)."
        },
        "countries" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Country"
          }
        }
      }
    },
    "Problem" : {
      "type" : "object",
      "properties" : {
        "type" : {
          "type" : "string",
          "format" : "uri",
          "example" : "https://api.bol.com/problems",
          "description" : "Type URI for this problem. Fixed value: https://api.bol.com/problems."
        },
        "title" : {
          "type" : "string",
          "example" : "Error validating request body. Consult the bol.com API documentation for more information.",
          "description" : "Title describing the nature of the problem."
        },
        "status" : {
          "type" : "integer",
          "format" : "int32",
          "example" : "40X",
          "description" : "HTTP status returned from the endpoint causing the problem."
        },
        "detail" : {
          "type" : "string",
          "example" : "Bad request",
          "description" : "Detailed error message describing in additional detail what caused the service to return this problem."
        },
        "host" : {
          "type" : "string",
          "example" : "Instance-001",
          "description" : "Host identifier describing the server instance that reported the problem."
        },
        "instance" : {
          "type" : "string",
          "format" : "uri",
          "example" : "https://api.bol.com//retailer/resource",
          "description" : "Full URI path of the resource that reported the problem."
        },
        "violations" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Violation"
          }
        }
      },
      "description" : "Describes a problem that occurred interacting with the API."
    },
    "ProcessStatus" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "example" : 1234567,
          "description" : "The process status id."
        },
        "entityId" : {
          "type" : "string",
          "example" : "987654321",
          "description" : "The id of the object being processed. E.g. in case of a shipment process id, you will receive the id of the order item being processed."
        },
        "eventType" : {
          "type" : "string",
          "example" : "PROCESS_EXAMPLE",
          "description" : "Name of the requested action that is being processed."
        },
        "description" : {
          "type" : "string",
          "example" : "Example request for processing 987654321.",
          "description" : "Describes the action that is being processed."
        },
        "status" : {
          "type" : "string",
          "example" : "SUCCESS",
          "description" : "Status of the action being processed.",
          "enum" : [ "PENDING", "SUCCESS", "FAILURE", "TIMEOUT" ]
        },
        "errorMessage" : {
          "type" : "string",
          "example" : "The example has been processed.",
          "description" : "Shows error message if applicable."
        },
        "createTimestamp" : {
          "type" : "string",
          "format" : "date-time",
          "example" : "2018-11-14T09:34:41+01:00",
          "description" : "Time of creation of the response."
        },
        "links" : {
          "type" : "array",
          "description" : "Lists available actions applicable to this endpoint.",
          "items" : {
            "$ref" : "#/definitions/Link"
          }
        }
      }
    },
    "ProcessStatusId" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "example" : 1234567,
          "description" : "The process status id."
        }
      }
    },
    "ProcessStatusResponse" : {
      "type" : "object",
      "required" : [ "processStatuses" ],
      "properties" : {
        "processStatuses" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ProcessStatus"
          }
        }
      }
    },
    "ProductContent" : {
      "type" : "object",
      "required" : [ "attributes", "internalReference" ],
      "properties" : {
        "internalReference" : {
          "type" : "string",
          "example" : "USER-REFERENCE",
          "description" : "A user defined unique reference to identify the products in the upload.",
          "minLength" : 1,
          "maxLength" : 30
        },
        "attributes" : {
          "type" : "array",
          "description" : "A list of attributes.",
          "items" : {
            "$ref" : "#/definitions/Attribute"
          },
          "maxItems" : 100,
          "minItems" : 1
        }
      }
    },
    "ProductContentResponse" : {
      "type" : "object",
      "properties" : {
        "internalReference" : {
          "type" : "string",
          "example" : "USER-REFERENCE",
          "description" : "A user defined unique reference to identify the products in the upload."
        },
        "rejectedAttributes" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/RejectedAttributeResponse"
          }
        },
        "status" : {
          "type" : "string",
          "example" : "VALIDATED_WITH_ATTRIBUTE_FAILURES",
          "description" : "The end status of the rejected attribute.",
          "enum" : [ "VALIDATED_OK", "VALIDATED_WITH_ATTRIBUTE_FAILURES", "REJECTED", "REJECTED_WITH_ATTRIBUTE_FAILURES" ]
        },
        "errorCode" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 1000,
          "description" : "The rejection error code."
        },
        "errorDescription" : {
          "type" : "string",
          "example" : "Example rejection message.",
          "description" : "The rejection error message explains why the value was rejected."
        }
      },
      "description" : "An rejected product content."
    },
    "ReducedReturn" : {
      "type" : "object",
      "required" : [ "returnItems" ],
      "properties" : {
        "returnId" : {
          "type" : "integer",
          "format" : "int64",
          "example" : 1,
          "description" : "Unique identifier for a return."
        },
        "registrationDateTime" : {
          "type" : "string",
          "format" : "date-time",
          "example" : "2016-11-14T11:06:48.423+01:00",
          "description" : "The date and time in ISO 8601 format when this return was registered."
        },
        "fulfilmentMethod" : {
          "type" : "string",
          "example" : "FBR",
          "description" : "Specifies whether this shipment has been fulfilled by the retailer (FBR) or fulfilled by bol.com (FBB). Defaults to FBR."
        },
        "returnItems" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ReducedReturnItem"
          }
        }
      }
    },
    "ReducedReturnItem" : {
      "type" : "object",
      "required" : [ "processingResults" ],
      "properties" : {
        "rmaId" : {
          "type" : "integer",
          "format" : "int64",
          "example" : 31234567,
          "description" : "The RMA (Return Merchandise Authorization) id that identifies this particular return."
        },
        "orderId" : {
          "type" : "string",
          "example" : "4012345678",
          "description" : "The id of the customer order this return item is in."
        },
        "ean" : {
          "type" : "string",
          "example" : "9789076174082",
          "description" : "The EAN number associated with this product."
        },
        "expectedQuantity" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 1,
          "description" : "The quantity that is expected to be returned by the customer. Note: this can be greater than 1 in case the customer ordered a quantity greater than 1 of the same product in the same customer order."
        },
        "returnReason" : {
          "type" : "string",
          "example" : "Niet naar verwachting",
          "description" : "The reason why the customer returned this product."
        },
        "returnReasonComments" : {
          "type" : "string",
          "example" : "Lorem Ipsum",
          "description" : "Additional details from the customer as to why this item was returned."
        },
        "handled" : {
          "type" : "boolean",
          "example" : true,
          "description" : "Indicates if this return item has been handled (by the retailer)."
        },
        "processingResults" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ReturnProcessingResult"
          }
        }
      }
    },
    "RejectedAttributeResponse" : {
      "type" : "object",
      "required" : [ "rejectionErrors" ],
      "properties" : {
        "attributeId" : {
          "type" : "string",
          "example" : "Width",
          "description" : "Identifier of the attribute from the data model."
        },
        "rejectionErrors" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/RejectionError"
          }
        }
      },
      "description" : "An rejected attribute."
    },
    "RejectionError" : {
      "type" : "object",
      "properties" : {
        "code" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 1000,
          "description" : "The rejection error code."
        },
        "message" : {
          "type" : "string",
          "example" : "Example rejection message.",
          "description" : "The rejection error message explains why the value was rejected."
        }
      }
    },
    "RetailPrice" : {
      "type" : "object",
      "required" : [ "country", "price" ],
      "properties" : {
        "price" : {
          "type" : "number",
          "example" : 10.99,
          "description" : "The retail price for this product with two decimals precision. The price includes VAT."
        },
        "country" : {
          "type" : "string",
          "example" : "NL",
          "description" : "The ISO-3166 country code. "
        }
      },
      "description" : "Retail price information with the country in which it applies."
    },
    "RetailPriceResponse" : {
      "type" : "object",
      "required" : [ "retailPrices" ],
      "properties" : {
        "retailPrices" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/RetailPrice"
          }
        }
      },
      "description" : "Retail price information for products and the countries in which they apply."
    },
    "Return" : {
      "type" : "object",
      "required" : [ "returnItems" ],
      "properties" : {
        "returnId" : {
          "type" : "integer",
          "format" : "int64",
          "example" : 1,
          "description" : "Unique identifier for a return."
        },
        "registrationDateTime" : {
          "type" : "string",
          "format" : "date-time",
          "example" : "2016-11-14T11:06:48.423+01:00",
          "description" : "The date and time in ISO 8601 format when this return was registered."
        },
        "fulfilmentMethod" : {
          "type" : "string",
          "example" : "FBR",
          "description" : "Specifies whether this shipment has been fulfilled by the retailer (FBR) or fulfilled by bol.com (FBB). Defaults to FBR."
        },
        "returnItems" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ReturnItem"
          }
        }
      }
    },
    "ReturnItem" : {
      "type" : "object",
      "required" : [ "processingResults" ],
      "properties" : {
        "rmaId" : {
          "type" : "integer",
          "format" : "int64",
          "example" : 31234567,
          "description" : "The RMA (Return Merchandise Authorization) id that identifies this particular return."
        },
        "orderId" : {
          "type" : "string",
          "example" : "4012345678",
          "description" : "The id of the customer order this return item is in."
        },
        "ean" : {
          "type" : "string",
          "example" : "9789076174082",
          "description" : "The EAN number associated with this product."
        },
        "title" : {
          "type" : "string",
          "example" : "Harry Potter en de steen der wijzen",
          "description" : "The product title."
        },
        "expectedQuantity" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 1,
          "description" : "The quantity that is expected to be returned by the customer. Note: this can be greater than 1 in case the customer ordered a quantity greater than 1 of the same product in the same customer order."
        },
        "returnReason" : {
          "type" : "string",
          "example" : "Niet naar verwachting",
          "description" : "The reason why the customer returned this product."
        },
        "returnReasonComments" : {
          "type" : "string",
          "example" : "Lorem Ipsum",
          "description" : "Additional details from the customer as to why this item was returned."
        },
        "trackAndTrace" : {
          "type" : "string",
          "example" : "3SBOL0987654321",
          "description" : "The track and trace code that is associated with this transport."
        },
        "transporterName" : {
          "type" : "string",
          "example" : "PostNL",
          "description" : "The name of the transporter."
        },
        "handled" : {
          "type" : "boolean",
          "example" : true,
          "description" : "Indicates if this return item has been handled (by the retailer)."
        },
        "processingResults" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ReturnProcessingResult"
          }
        },
        "customerDetails" : {
          "$ref" : "#/definitions/CustomerDetails"
        }
      }
    },
    "ReturnProcessingResult" : {
      "type" : "object",
      "properties" : {
        "quantity" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 1,
          "description" : "The processed quantity."
        },
        "processingResult" : {
          "type" : "string",
          "example" : "ACCEPTED",
          "description" : "The processing result of the return."
        },
        "handlingResult" : {
          "type" : "string",
          "example" : "RETURN_RECEIVED",
          "description" : "The handling result requested by the user."
        },
        "processingDateTime" : {
          "type" : "string",
          "format" : "date-time",
          "example" : "2018-04-17T10:55:37+02:00",
          "description" : "The date and time in ISO 8601 format when the return was processed."
        }
      }
    },
    "ReturnRequest" : {
      "type" : "object",
      "required" : [ "quantityReturned" ],
      "properties" : {
        "handlingResult" : {
          "type" : "string",
          "example" : "RETURN_RECEIVED",
          "enum" : [ "RETURN_RECEIVED", "EXCHANGE_PRODUCT", "RETURN_DOES_NOT_MEET_CONDITIONS", "REPAIR_PRODUCT", "CUSTOMER_KEEPS_PRODUCT_PAID", "STILL_APPROVED" ]
        },
        "quantityReturned" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 1,
          "minimum" : 1,
          "maximum" : 9999
        }
      }
    },
    "ReturnsResponse" : {
      "type" : "object",
      "required" : [ "returns" ],
      "properties" : {
        "returns" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ReducedReturn"
          }
        }
      }
    },
    "SalesForecastResponse" : {
      "type" : "object",
      "required" : [ "countries", "periods", "total" ],
      "properties" : {
        "name" : {
          "type" : "string",
          "example" : "SALES_FORECAST",
          "description" : "Indicator name."
        },
        "type" : {
          "type" : "string",
          "example" : "decimal",
          "description" : "Interpretation of the data that applies to this measurement."
        },
        "total" : {
          "$ref" : "#/definitions/TotalResponse"
        },
        "countries" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/CountryTotalResponse"
          }
        },
        "periods" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PeriodResponse"
          }
        }
      }
    },
    "ShipmentRequest" : {
      "type" : "object",
      "required" : [ "orderItems" ],
      "properties" : {
        "orderItems" : {
          "type" : "array",
          "description" : "List of order items to ship. Order item id's must belong to the same order.",
          "items" : {
            "$ref" : "#/definitions/OrderItem"
          },
          "maxItems" : 1,
          "minItems" : 1
        },
        "shipmentReference" : {
          "type" : "string",
          "example" : "B321SR",
          "description" : "Used for administration purposes.",
          "minLength" : 0,
          "maxLength" : 90
        },
        "shippingLabelId" : {
          "type" : "string",
          "example" : "d4c50077-0c19-435f-9bee-1b30b9f4ba1a",
          "description" : "Specifies shipping label to be used for this shipment. Can be retrieved through the shipping label endpoint."
        },
        "transport" : {
          "$ref" : "#/definitions/TransportInstruction"
        }
      }
    },
    "ShippingLabelRequest" : {
      "type" : "object",
      "required" : [ "orderItems", "shippingLabelOfferId" ],
      "properties" : {
        "orderItems" : {
          "type" : "array",
          "description" : "Order items for which the delivery options are requested.",
          "items" : {
            "$ref" : "#/definitions/OrderItem"
          }
        },
        "shippingLabelOfferId" : {
          "type" : "string",
          "example" : "027b79fa-5743-40f0-94c7-0eac761af611",
          "description" : "Shipping label offer id for which you request a shipping label."
        }
      },
      "description" : "The configuration of order items to get delivery options for."
    },
    "SubscriptionResponse" : {
      "type" : "object",
      "required" : [ "id", "resources", "url" ],
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "example" : 1234,
          "description" : "A unique identifier for the subscription"
        },
        "resources" : {
          "type" : "array",
          "example" : "['PROCESS_STATUS']",
          "description" : "Type of event",
          "items" : {
            "type" : "string"
          }
        },
        "url" : {
          "type" : "string",
          "example" : "https://www.bol.com/webhook",
          "description" : "URL to receive this WebHook notification"
        }
      }
    },
    "SubscriptionsResponse" : {
      "type" : "object",
      "required" : [ "subscriptions" ],
      "properties" : {
        "subscriptions" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/SubscriptionResponse"
          }
        }
      }
    },
    "TotalResponse" : {
      "type" : "object",
      "properties" : {
        "minimum" : {
          "type" : "number",
          "format" : "double",
          "example" : 10.5,
          "description" : "Minimum number of estimated sales expectations on the bol.com platform."
        },
        "maximum" : {
          "type" : "number",
          "format" : "double",
          "example" : 20.5,
          "description" : "Maximum number of estimated sales expectations on the bol.com platform."
        }
      }
    },
    "TransportInstruction" : {
      "type" : "object",
      "properties" : {
        "transporterCode" : {
          "type" : "string",
          "example" : "TNT",
          "description" : "Specify the transporter that will carry out the shipment."
        },
        "trackAndTrace" : {
          "type" : "string",
          "example" : "3SBOL0987654321",
          "description" : "The track and trace code that is associated with this transport."
        }
      }
    },
    "UpdateSubscriptionRequest" : {
      "type" : "object",
      "required" : [ "resources", "url" ],
      "properties" : {
        "resources" : {
          "type" : "array",
          "example" : "['PROCESS_STATUS']",
          "description" : "Type of event",
          "items" : {
            "type" : "string",
            "enum" : [ "PROCESS_STATUS" ]
          }
        },
        "url" : {
          "type" : "string",
          "example" : "https://www.bol.com/webhook",
          "description" : "URL to receive this WebHook notification",
          "pattern" : "^https.*"
        }
      }
    },
    "ValidationReportResponse" : {
      "type" : "object",
      "properties" : {
        "productContents" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ProductContentResponse"
          }
        }
      },
      "description" : "Validation report."
    },
    "Violation" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string",
          "example" : "exampleValue",
          "description" : "Describes the origin of the error, for instance a field or query parameter validation error."
        },
        "reason" : {
          "type" : "string",
          "example" : "Request contains invalid value(s): 'INVALID', allowed values: ALLOWED_VALUE1, ALLOWED_VALUE2.",
          "description" : "Detailed description of the validation error that caused the problem."
        }
      },
      "description" : "Describes a violation that occurred interacting with the API."
    }
  }
}
